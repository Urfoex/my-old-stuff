#ifndef STATEMACHINE_H
#define STATEMACHINE_H

#include <boost/scoped_ptr.hpp>
#include <iostream>
#include "FileReadMachine.h"

///***************************************************************************
///***************************************************************************
/// @class StateMachine
/// 
/// A machine to handle the states of a SGF-format.
///***************************************************************************
class StateMachine {
public:
    ///***********************************************************************
    /// Constructor.
    /// 
    /// @param fileReadMachine The FileReadMachine to use.
    ///***********************************************************************
    StateMachine ( FileReadMachine& fileReadMachine );
    
    ///***********************************************************************
    /// Destructor.
    ///***********************************************************************
    ~StateMachine() {
        std::clog << "SM done\n";
    };

    ///***********************************************************************
    /// Starts the machine.
    ///***********************************************************************
    void start();

private:
    FileReadMachine& _fileReadMachine;

    ///***********************************************************************
    /// '(' - State
    ///***********************************************************************
    void stateGroup ( );
    
    ///***********************************************************************
    /// ';' - State
    ///***********************************************************************
    void stateSemicolon ( );
    
    ///***********************************************************************
    /// bevor '[' - State
    ///***********************************************************************
    void statePropertie ( );
    
    ///***********************************************************************
    /// '[' - State
    ///***********************************************************************
    void stateOption ( );
    
    ///***********************************************************************
    /// ']' - State
    ///***********************************************************************
    void statePropertieEnd ( );
    
    ///***********************************************************************
    /// ')' - State
    ///***********************************************************************
    void stateGroupEnd ( );
};

#endif
